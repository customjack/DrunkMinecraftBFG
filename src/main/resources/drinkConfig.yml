#
#------------------------------
#     Format Guidelines:
#------------------------------
#
# You can create your own "drink events," every event needs the following format
# event-name:
#   action: [actionType]
#   instruction: [String to be displayed upon action completion]
#   drinkValue: [# of drinks]
#
#            OR
#
# event-name:
#   action: [actionType]
#   instruction: [String to be displayed upon action completion]
#   drinkMin: [minimum number of drinks]
#   drinkMax: [maxmimum number of drinks]
#
# The later picks a random integer between the drink minimum and maximum (inclusive)
#
#
# There are a number of optional parameters that can be added to any event:
# 1) reason: [String giving reason to player for drinking]
# 2) broadcastMessage: [String giving reason that will be broadcast for other players to see]
# 3) giveReason: [True/False, specifies whether the player will receive any reason for drinking
# 4) chance: [0.0 - 1.0, the chance the player has to drink for this action]
# 5) cooldown: [The time in seconds before the player can drink for this action action]
# 6) drinksToGive: [amount of drinks a player can give out to drink]
# 7) everyoneElse: [True/False, specifies whether everyone else will drink in place of the player]
#
#
# In strings you can use the following placeholders:
# 1) $playerName$ (replaces this part of the string with the player's name)
# 2) $drinkValue$ (number of drinks the game decides the player takes)
# 3) $drinksToGive$ (number of drinks the player gives)
# 3) $drinks$, $shots$, $sips$, $chugs$ all can be used to represent the proper grammar for the amount of drinks#
#    i.e they will have an 's' at the end if drinkValue is not 1.
#
#
# There are a number of possible actions. With most actions you can add a condition (listed under them)
# For example, you can specify what type of block broken causes a "drink event"
# Not specifying a condition means any time the event occurs, a drink event will occur.
#
#
# POSSIBLE ACTIONS:
# 1) BREAK_BLOCK
#    a) blockType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html for choices)
# 2) CHAT
#    a) message
#    b) messageContains
# 3) CONSUME
#    a) itemType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html for choices)
# 4) DIE
#    a) damageCause (see https://hub.spigotmc.org/javadocs/spigot/org/bukkit/event/entity/EntityDamageEvent.DamageCause.html for choices)
#    b) killer (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/entity/EntityType.html for choices)
# 5) DROP
#    a) itemType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html for choices)
#    b) amount
# 6) FISH
#    a) itemType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html for choices)
# 7) GET_ADVANCEMENT [Not currently working]
#    a) advancement
# 8) HARVEST
#    a) itemType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html for choices)
#    b) amount
# 9) INTERACT
#    a) itemType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html for choices)
#    b) isRightClick (True or False)
#    c) isLeftClick  (True or False)
# 10) INTERACT_ENTITY
#    a) entity (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/entity/EntityType.html for choices)
# 11) ITEM_BREAK
#    a) itemType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html for choices)
# 12) JOIN
# 13) KILL
#    a) entity (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/entity/EntityType.html for choices)
# 14) LEVEL_CHANGE
#    a) levelAchieved
# 15) MEND
#    a) itemType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/entity/EntityType.html for choices)
# 16) MOVE
#    a) speed
# 17) PICKUP
#    a) itemType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/entity/EntityType.html for choices)
#    b) amount
# 18) PLACE_BLOCK
#    a) blockType (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html for choices)
# 19) TAKE_DAMAGE
#    a) damageCause (see https://hub.spigotmc.org/javadocs/spigot/org/bukkit/event/entity/EntityDamageEvent.DamageCause.html for choices)
# 20) TAME
#    a) entity (see https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/entity/EntityType.html for choices)
# 21) TELEPORT
#    a) teleportCause (see https://hub.spigotmc.org/javadocs/spigot/org/bukkit/event/player/PlayerTeleportEvent.TeleportCause.html for choices)
#    b) distance
#
# There are examples below, they can be editted or reMOVEd
# You can also add your own.

dying:
  action: DIE
  instruction: 'Finish drink'
  reason: 'for dying'
  broadcastMessage: '$playerName$ must finish their drink for dying'
  drinkValue: 5

taking-fall-damage:
  action: TAKE_DAMAGE
  instruction: 'Take $drinkValue$ $drinks$'
  reason: 'for taking fall damage'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for taking fall damage'
  drinkValue: 1
  chance: 0.30
  actionConditions:
    damageCause: FALL

entity-explosion:
  action: TAKE_DAMAGE
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for taking entity explosion damage (5 second cooldown)'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for taking explosion damage'
  drinkValue: 1
  cooldown: 5
  actionConditions:
    damageCause: ENTITY_EXPLOSION

mining-diamonds:
  action: BREAK_BLOCK
  instruction: 'Pick another player to drink'
  reason: 'for mining diamonds'
  drinkValue: 0
  drinksToGive: 1
  broadcastMessage: '$playerName$ has gained $drinksToGive$ $drinks$ to assign'
  actionConditions:
    blockType: DIAMOND_ORE

mining-deepslate-diamonds:
  action: BREAK_BLOCK
  instruction: 'Pick another player to drink'
  reason: 'for mining diamonds'
  drinkValue: 0
  drinksToGive: 1
  broadcastMessage: '$playerName$ has gained $drinksToGive$ $drinks$ to assign'
  actionConditions:
    blockType: DEEPSLATE_DIAMOND_ORE

item-breaking:
  action: ITEM_BREAK
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for breaking your tool'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for breaking their tool (lmao idiot)'
  drinkValue: 1

consuming-potion:
  action: CONSUME
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for drinking in game'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for drinking in game'
  drinkValue: 1
  actionConditions:
    itemType: POTION

killing-horse:
  action: KILL
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for killing a horse'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for killing a horse'
  drinkValue: 3
  actionConditions:
    entity: HORSE

killing-dolphin:
  action: KILL
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for killing a dolphin'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for killing a dolphin'
  drinkValue: 3
  actionConditions:
    entity: DOLPHIN

killing-golem:
  action: KILL
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for killing a golem'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for killing a golem'
  drinkValue: 3
  actionConditions:
    entity: IRON_GOLEM

killing-turtle:
  action: KILL
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for killing a turtle'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for killing a turtle'
  drinkValue: 3
  actionConditions:
    entity: TURTLE

killing-cat:
  action: KILL
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for killing a cat'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for taking $drinkValue$ lives away from a cat'
  drinkMin: 1
  drinkMax: 9
  actionConditions:
    entity: CAT

killing-villager:
  action: KILL
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for killing a villager'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for killing a villager'
  drinkValue: 2
  actionConditions:
    entity: VILLAGER

killing-zombie-villager:
  action: KILL
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for killing a villager'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for killing a zombie villager (lmao get fucked)'
  drinkValue: 2
  actionConditions:
    entity: ZOMBIE_VILLAGER

taming-animal:
  action: TAME
  instruction: 'Assign $drinksToGive$ $drinks$'
  reason: 'for taming an animal'
  broadcastMessage: '$playerName$ has gained $drinksToGive$ $drinks$ to assign for taming an animal'
  drinkValue: 0
  chance: 0.50
  drinksToGive: 1

killing-player:
  action: KILL
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for killing a player'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for committing murder'
  drinkValue: 1
  actionConditions:
    entity: PLAYER

fire-damage:
  action: TAKE_DAMAGE
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for taking fire damage (30 second cooldown)'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for taking fire damage'
  drinkValue: 1
  cooldown: 30
  actionConditions:
    damageCause: FIRE

lightning-damage:
  action: TAKE_DAMAGE
  instruction: 'Finish your drink'
  reason: 'for getting struck by lightning'
  broadcastMessage: ''
  drinkValue: 5
  cooldown: 5
  actionConditions:
    damageCause: LIGHTNING

lightning-damage-2:
  action: TAKE_DAMAGE
  everyoneElse: true
  instruction: 'Finish your drink'
  reason: 'because $playerName$ got struck by lightning'
  broadcastMessage: 'Everyone must finish their drink because $playerName$ got struck by lightning LMFAO'
  drinkValue: 5
  cooldown: 5
  actionConditions:
    damageCause: LIGHTNING

breaking-spawner:
  action: BREAK_BLOCK
  instruction: 'Assign 5 drinks'
  reason: 'for breaking a spawner'
  drinkValue: 0
  drinksToGive: 3
  broadcastMessage: '$playerName$ has gained $drinksToGive$ $drinks$ to assign for breaking a spawner'
  actionConditions:
    blockType: SPAWNER

teleporting-to-end:
  action: TELEPORT
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for teleporting to the end'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for teleporting to the end'
  drinkValue: 1
  actionConditions:
    teleportCause: END_PORTAL

breaking-beehive:
  action: BREAK_BLOCK
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for breaking a beehive'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for breaking a beehive'
  drinkValue: 1
  actionConditions:
    blockType: BEEHIVE

chating-lol:
  action: CHAT
  instruction: 'Take $drinkValue$ drinks'
  giveReason: false
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for mystery reason #1'
  drinkValue: 1
  actionConditions:
    messageContains: 'lol'

eating-rotten-flesh:
  action: CONSUME
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for eating rotten flesh'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for eating rotten flesh (gross tbh)'
  drinkValue: 1
  actionConditions:
    itemType: ROTTEN_FLESH

dropping-diamond_sword:
  action: DROP
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for dropping a diamond tool'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for dropping a diamond tool'
  drinkValue: 1
  actionConditions:
    itemType: DIAMOND_SWORD

dropping-diamond_pickaxe:
  action: DROP
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for dropping a diamond tool'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for dropping a diamond tool'
  drinkValue: 1
  actionConditions:
    itemType: DIAMOND_PICKAXE

dropping-diamond_shovel:
  action: DROP
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for dropping a diamond tool'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for dropping a diamond tool'
  drinkValue: 1
  actionConditions:
    itemType: DIAMOND_SHOVEL

dropping-diamond_axe:
  action: DROP
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for dropping a diamond tool'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for dropping a diamond tool'
  drinkValue: 1
  actionConditions:
    itemType: DIAMOND_AXE

dropping-diamond_hoe:
  action: DROP
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for dropping a diamond tool'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for dropping a diamond tool'
  drinkValue: 1
  actionConditions:
    itemType: DIAMOND_HOE

fishing_leather_boots:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: LEATHER_BOOTS

fishing_lily_pad:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: LILY_PAD

fishing_leather_bowl:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: BOWL

fishing_leather_leather:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: LEATHER

fishing_rotten_flesh:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: ROTTEN_FLESH

fishing_stick:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: STICK

fishing_string:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: STRING

fishing_water_bottle:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: POTION

fishing_bone:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: BONE

fishing_ink_sac:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: INK_SAC

fishing_tripwire_hook:
  action: FISH
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for fishing junk'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for junk (this would not happen in the hit plugin FreeRPG)'
  drinkValue: 1
  actionConditions:
    itemType: TRIPWIRE_HOOK

pushing_stone_button:
  action: INTERACT
  instruction: 'Take $drinkValue$ drinks'
  giveReason: false
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for mystery reason #2'
  drinkValue: 1
  cooldown: 60
  actionConditions:
    itemType: STONE_BUTTON

getting-in-a-minecart:
  action: INTERACT_ENTITY
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for riding in a minecart'
  broadcastMessage: '$playerName$ must take $drinkValue$ $drinks$ for riding in a minecart'
  drinkValue: 1
  actionConditions:
    entity: MINECART

talking-to-piglin:
  action: INTERACT_ENTITY
  instruction: 'Take $drinkValue$ drinks'
  reason: 'for talking to a piglin'
  broadcastMessage: 'A piglin offers $playerName$ $drinkValue$ $drinks$, it would be very rude to decline'
  drinkValue: 1
  actionConditions:
    entity: PIGLIN

killing-enderdragon:
  action: KILL
  everyoneElse: true
  instruction: 'Finish your drink'
  reason: '$playerName has killed the enderdragon'
  broadcastMessage: '$playerName$ has beat the game, everyone finish your drinks (filthy casuals)'
  drinkValue: 3
  actionConditions:
    entity: ENDER_DRAGON

killing-enderman:
  action: KILL
  instruction: 'Assign $drinksToGive$ $drinks$'
  reason: 'for killing an enderman'
  broadcastMessage: '$playerName$ has gained $drinksToGive$ $drinks$ to assign for killing an enderman'
  drinkValue: 0
  drinksToGive: 1
  actionConditions:
    entity: ENDERMAN






